from pymongo import MongoClient
import time

from util import Util

DATABASE = 'db/bloginator.db'

class DatabaseManager():
  def __init__(self, database):
    self.database = database

  @staticmethod
  def create():
    connection = MongoClient();
    c.execute("""CREATE TABLE IF NOT EXISTS users (
              username text NOT NULL PRIMARY KEY,
              password text NOT NULL,
              fullname text NOT NULL);
              """)
    c.execute("""CREATE TABLE IF NOT EXISTS posts (
              username text NOT NULL,
              title text,
              content text,
              timestamp text NOT NULL)
              """)
    c.execute("""CREATE TABLE IF NOT EXISTS comments (
              postId text NOT NULL,
              username text NOT NULL,
              content text,
              timestamp integer NOT NULL)
              """)
    connection.commit()
    connection.close()
    return DatabaseManager(DATABASE)
  """
  This registers a user and adds them to the database assuming all validity
  checks have passed on the username except for uniqueness. This function
  will return True if the registration was successful and False if there
  already exists a user with given username.
  """
  def register_user(self, username, password, fullname):
    connection = MongoClient();
    c = connection.cursor()
    result = True
    try:
      c.execute('INSERT INTO users VALUES (?, ?, ?)',
                (username, Util.hash(password), fullname))
    except sqlite3.IntegrityError:
      result = False
    connection.commit()
    connection.close()
    return result

  """
  This method returns the data of a post given the id of the post.
  """
  def get_post_by_id(self, post_id):
    connection = sqlite3.connect(self.database)
    c = connection.cursor()
    c.execute("""SELECT rowid,username,title,content,timestamp
              FROM posts WHERE rowid=?""",
              (post_id,))
    post = c.fetchone()
    connection.close()
    return post

  """
  This method fetches all the data we have stored on user comments.
  """
  def fetch_all_comments(self):
    connection = MongoClient()
    comments = connection.comments.find()
    return comments

if __name__ == '__main__':
  d = DatabaseManager.create()
  print d.register_user('username', 'password', 'blah')
  print d.register_user('bob', 'de bilder', 'blah')
  d.add_post('bob', 'yo')
